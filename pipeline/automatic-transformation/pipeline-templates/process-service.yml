parameters:
  service: ''

jobs:
- job: ''
  displayName: ${{ parameters.service }}
  pool:
    vmImage: 'ubuntu-latest'
  steps:
#  - checkout: self
#    persistCredentials: true
  - script: sudo apt-get install -y xsltproc xmlstarlet 
    displayName: Install packages

#  - script: git config --global user.email "trans-pipeline@example.com" && git config --global user.name "Tranformation Pipeline"
#    displayName: Configure GIT

  - script: mkdir -p target/${{ parameters.service }}/src
    displayName: Create target directory

#  - script: git clone --depth=1 --branch=master $GIT_URL /tmp/services/${{ parameters.service }}
#    displayName: Get ${{ parameters.service }} source
#    env:
#     GIT_URL: https://stash.aviva.co.uk/scm/intgic/${{ parameters.service }}.git

  - script: mkdir -p /tmp/services && cp -r ${{ parameters.service }} /tmp/services
    displayName: Copy source files

  - script: xsltproc automatic-transformation/pom-transform.xsl /tmp/services/${{ parameters.service }}/pom.xml > target/${{ parameters.service }}/pom.xml
    displayName: Transform pom.xml

  - script: echo "##vso[task.setvariable variable=applicationName]$(xmlstarlet sel -N m='http://maven.apache.org/POM/4.0.0' -t -m '/m:project/m:artifactId' -v . pom.xml)"
    workingDirectory: target/${{ parameters.service }}
    displayName: Get Application Name
  
  - script: echo Application Name = $(applicationName)
    displayName: debug app name

#  Replacing placeholders in all template files
#
#  - bash: find -type f -exec sh -c "envsubst < {} > {}.tmp && mv {}.tmp {}" \;
#    workingDirectory: api-spring-boot-template
#    displayName: Fulfill the template
#    env:
#      APPLICATION_NAME: $(applicationName)

# or just in application.yml file only as follow
  - script: envsubst < application.yml > application.yml.tmp && mv application.yml.tmp application.yml
    workingDirectory: api-spring-boot-template/src/main/resources
    displayName: Fulfill the template
    env:
      APPLICATION_NAME: $(applicationName)

  - script: cp -r /tmp/services/${{ parameters.service }}/src/main /tmp/services/${{ parameters.service }}/src/test target/${{ parameters.service }}/src
    displayName: Copy service files to target
    
  - script: echo "##vso[task.setvariable variable=beanDeclarationFilePath]$(grep -Ril "org.apache.camel.spring.spi.BridgePropertyPlaceholderConfigurer" /tmp/services/${{ parameters.service }}/src/main/resources/META-INF)"
    displayName: Get Bean Declaration File Path
  
  - script: echo Bean Declaration File Path = $(beanDeclarationFilePath)
    displayName: debug bean declaration file path

  - script: xsltproc automatic-transformation/bean-declarations-transform.xsl $(beanDeclarationFilePath) > $(beanDeclarationFilePath)
    displayName: Transform bean-declarations.xml

  - script: cp -r api-spring-boot-template/* target/${{ parameters.service }}
    displayName: Copy template to target

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: target/${{ parameters.service }}
      artifactName: ${{ parameters.service }}

#  - script: git push origin -d ${{ parameters.service }}-transformation | exit 0
#    displayName: Remove old transformation branch if exists

#  - script: git checkout -b ${{ parameters.service }}-transformation && git add . && git commit -m "Automatic service tranformation for ${{ parameters.service }}"
#    displayName: git commit

#  - script: git push --set-upstream origin ${{ parameters.service }}-transformation
#    displayName: git push
