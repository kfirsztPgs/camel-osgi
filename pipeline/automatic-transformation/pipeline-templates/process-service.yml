parameters:
  service: ''

jobs:
- job: ''
  displayName: ${{ parameters.service }}
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - checkout: self
    persistCredentials: true

  - script: sudo apt-get install -y xsltproc xmlstarlet 
    displayName: Install packages

  - script: git config --global user.email "trans-pipeline@example.com" && git config --global user.name "Tranformation Pipeline"
    displayName: Configure GIT

  - script: mkdir -p target/${{ parameters.service }}/src
    displayName: Create target directory

  - script: git clone --depth=1 --branch=master $GIT_URL /tmp/services/${{ parameters.service }}
    displayName: Get ${{ parameters.service }} source
    env:
      GIT_URL: https://$(GIT_USER_PASS)@dev.azure.com/pmuszynski/${{ parameters.service }}/_git/${{ parameters.service }}

  - script: xsltproc automatic-transformation/pom-transform.xsl /tmp/services/${{ parameters.service }}/pom.xml > target/${{ parameters.service }}/pom.xml
    displayName: Transform pom.xml

  - script: echo "##vso[task.setvariable variable=applicationName]$(xmlstarlet sel -N m='http://maven.apache.org/POM/4.0.0' -t -m '/m:project/m:artifactId' -v . pom.xml)"
    workingDirectory: target/${{ parameters.service }}
    displayName: Get Application Name
  
  - script: echo Application Name = $(applicationName)
    displayName: debug app name

#  Replacing placeholders in all template files
#
#  - bash: find -type f -exec sh -c "envsubst < {} > {}.tmp && mv {}.tmp {}" \;
#    workingDirectory: template
#    displayName: Fulfill template
#    env:
#      APPLICATION_NAME: $(applicationName)

# or just in application.yml file only as follow
  - script: envsubst < application.yml > application.yml.tmp && mv application.yml.tmp application.yml
    workingDirectory: template/src/main/resources
    displayName: Fulfill template
    env:
      APPLICATION_NAME: $(applicationName)

  - script: cp -r /tmp/services/${{ parameters.service }}/src/main /tmp/services/${{ parameters.service }}/src/test target/${{ parameters.service }}/src
    displayName: Copy service files to target

  - script: cp -r template/* target/${{ parameters.service }}
    displayName: Copy template to target

# THE SHORTEST PATH OF DIRECTORY CONTAINS.java FILE
# dirname `find -type f -name '*.java' -printf "%d %p\n" | sort -n | head -1 | awk '{print $2}'`

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: target/${{ parameters.service }}
      artifactName: ${{ parameters.service }}

#  - script: git push origin -d ${{ parameters.service }}-transformation | exit 0
#    displayName: Remove old transformation branch if exists
#  
#  - script: git checkout -b ${{ parameters.service }}-transformation && git add . && git commit -m "Automatic service tranformation for ${{ parameters.service }}"
#    displayName: git commit
#  
#  - script: git push --set-upstream origin ${{ parameters.service }}-transformation
#    displayName: git push
